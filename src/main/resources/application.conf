
database {
  driver = "com.mysql.jdbc.Driver"
  host = "localhost"
  host = ${?DATABASE_HOST}
  username = "root"
  username = ${?DATABASE_USERNAME}
  password = ""
  password = ${?DATABASE_PASSWORD}
}

akka {

  loglevel = "DEBUG"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      lifecycle = on
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?AKKA_REMOTING_BIND_HOST}
      port = 2551
      port = ${?AKKA_REMOTING_BIND_PORT}
    }
  }

  // DNS settings we override in our pods.
  io.dns.resolver = ${?DNS_RESOLVER}
  io.dns.async-dns.resolve-srv = ${?RESOLVE_SRV}
  io.dns.async-dns.resolv-conf = ${?RESOLV_CONF}

  cluster {
    roles = [frontend, manage, compute]
    role {
      frontend.min-nr-of-members = 1
      manage.min-nr-of-members = 1
      compute.min-nr-of-members = 1
    }
    seed-nodes.0 = "akka.tcp://sclr@127.0.0.1:2551"
    seed-nodes.0 = ${?AKKA_SEED_NODE}
//    # auto downing is NOT safe for production deployments.
//    auto-down-unreachable-after = 10s

    pub-sub {
      send-to-dead-letters-when-no-subscribers = on
    }

    # Disable legacy metrics in akka-cluster.
    metrics {
      enabled = off
    }
  }

  http.server {
    default-http-host = "127.0.0.1"
    default-http-host = ${?HTTP_HOST}
    default-http-port = 8080
    default-http-port = ${?HTTP_PORT}
    default-https-port = 443
    default-https-port = ${?HTTPS_PORT}
  }

  extensions = ["akka.cluster.pubsub.DistributedPubSub"]
//  extensions = ["akka.cluster.metrics.ClusterMetricsExtension", "akka.cluster.pubsub.DistributedPubSub"]
}
