
database {
  driver = "com.mysql.jdbc.Driver"
  url = "jdbc:mysql://localhost"
  url = ${?JDBC_URL}
  schema = "sclr"
  schema = ${?JDBC_SCHEMA}
  username = "root"
  username = ${?JDBC_USERNAME}
  password = ""
  password = ${?JDBC_PASSWORD}
}

clustering {
  ip = "127.0.0.1"
  ip = ${?AKKA_THIS_IP}
  port = 0
}

akka {
  actor {
    provider = cluster

    deployment {
      /manage/computeRouter = {
        router = cluster-metrics-adaptive-group
        # Router parameter specific for metrics extension.
        # metrics-selector = heap
        # metrics-selector = load
        # metrics-selector = cpu
        metrics-selector = mix
        routees.paths = ["/user/computeActor"]
        cluster {
          enabled = on
          use-roles = ["compute"]
          allow-local-routees = off
        }
      }
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
  }

  cluster {
    min-nr-of-members = 3
    role {
      frontend.min-nr-of-members = 1
      manage.min-nr-of-members = 1
      compute.min-nr-of-members = 1
      save.min-nr-of-members = 1
    }
    seed-nodes = []
    # auto downing is NOT safe for production deployments.
    auto-down-unreachable-after = 10s

//    pub-sub {
//      routing-logic = round-robin
//      send-to-dead-letters-when-no-subscribers = on
//    }

    # Disable legacy metrics in akka-cluster.
    metrics {
      enabled = off

      # Sigar native library extract location during tests.
      # Note: use per-jvm-instance folder when running multiple jvm on one host.
      native-library-extract-folder=${user.dir}/target/native
    }
  }

//  extensions = ["akka.cluster.pubsub.DistributedPubSub"]
  extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]
//  extensions = ["akka.cluster.metrics.ClusterMetricsExtension", "akka.cluster.pubsub.DistributedPubSub"]

  loglevel = "DEBUG"
}
