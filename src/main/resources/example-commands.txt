gcloud config set project sclr-01
gcloud config set compute/zone us-central1-a
gcloud container clusters create sclr-01  --zone us-central1-a --num-nodes 8 --cluster-version=1.9.2-gke.1
gcloud compute project-info describe --project sclr-01
gcloud container clusters get-credentials sclr-01
gcloud container clusters delete sclr-01
kubectl create secret generic mysql-password --from-literal=password=KO4eD0BrP2PC19jO
kubectl scale statefulsets compute --replicas=5



minikube start --cpus 4 --memory 4096
minikube addons enable kube-dns
minikube addons list
minikube dashboard
eval $(minikube docker-env) // make minikube use the correct local repo
kubectl create secret generic mysql-password --from-literal=password=KO4eD0BrP2PC19jO

docker images -a |  grep "<none>\|us.gcr"
docker images -a | grep "<none>\|us.gcr" | awk '{print $3}' | xargs docker rmi


// short lived access to us.gcr.io
gcloud docker -a
cd src/main/resources/docker/; docker build -t local/openjdk-custom:latest .; cd ../../../../;
sbt manage/docker:publish compute/docker:publish frontend/docker:publish
sbt manage/docker:publishLocal compute/docker:publishLocal frontend/docker:publishLocal

kubectl get all -o wide
kubectl logs -v=5 compute-0

kubectl config get-contexts
kubectl config use-context minikube
kubectl config use-context gke_sclr-01_us-central1-a_sclr-01

**** MYSQL ****

kubectl exec -it compute-0 -- /bin/bash
kubectl run -it --rm --image=mysql:5.7 --restart=Never mysql-client -- mysql -h mysql-service -pKO4eD0BrP2PC19jO
kubectl exec -it mysql-client -- mysql -h mysql-service -pKO4eD0BrP2PC19jO

cd src/main/resources/kubernetes/; kubectl create -f mysql.yaml; kubectl create -f manage-pods.yaml; kubectl create -f compute-pods.yaml; kubectl create -f frontend-pods.yaml; cd ../../../..;
kubectl delete pvc mysql-pv-claim; kubectl delete all -l app=sclr

kubectl delete statefulsets compute --grace-period=0 --force

kubectl exec -ti compute-0 -- curl -vH "Content-Type: application/json" -X POST -d '{"name":"m1000","dnfSize":2, "mu":0.4}' http-service.default.svc.cluster.local:8080/begin
kubectl exec -ti mysql-85d59757b6-z8zfb -- mysqldump --add-drop-database --databases small -pKO4eD0BrP2PC19jO > backup.sql
mysqldump --databases small -h mysql-service.default.svc.cluster.local -pKO4eD0BrP2PC19jO > backup.sql 

/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/
sudo ln -s /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/kubectl /usr/local/bin/kubectl
sudo ln -s /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/docker-credential-gcr /usr/local/bin/docker-credential-gcr
sudo ln -s /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/container-builder-local /usr/local/bin/container-builder-local


SELECT * FROM tiny.results ORDER BY error LIMIT 10;


docker pull us.gcr.io/sclr-01/frontend:0.8.1
docker pull us.gcr.io/sclr-01/manage:0.8.1
docker pull us.gcr.io/sclr-01/compute:0.8.1
docker pull us.gcr.io/sclr-01/frontend:latest
docker pull us.gcr.io/sclr-01/manage:latest
docker pull us.gcr.io/sclr-01/compute:latest


select * from medium.results order by created_at limit 1;
select * from medium.results order by created_at desc limit 1;


